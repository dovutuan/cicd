name: Build and Deploy Docker Image

on:
  push:
    branches:
      - master

env:
  ECR_REPOSITORY: be

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: current branch 1
        run: echo "current branch ${GITHUB_REF_NAME}"

      - name: current branch 2
        run: echo "current branch ${{ github.ref_name }}"

      - name: test
        run: |
          if [ "${{ github.ref_name }}" == "master" ]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          fi
          
          source $GITHUB_ENV
          
          echo "ECR_REPOSITORY=abc-${ENVIRONMENT}-xyz-repository" >> $GITHUB_ENV



#      - name: Set up image tag
#        id: vars
#        run: echo "IMAGE_TAG=$(date +'%Y%m%d%H%M%S%3N')" >> $GITHUB_ENV
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#
#      - name: Check if ECR repository exists and create if not
#        run: |
#          if ! aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} 2>/dev/null; then
#            echo "Repository does not exist. Creating..."
#            aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY }}
#            echo "Repository created successfully."
#          else
#            echo "Repository already exists. Skipping creation."
#          fi
#
#      - name: Log in to Amazon ECR
#        id: ecr-login
#        uses: aws-actions/amazon-ecr-login@v2
#
#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
#          ECR_REPOSITORY: be
#          IMAGE_TAG: ${{ env.IMAGE_TAG }}
#        run: |
#          # Build the Docker image
#          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
#
#          # Tag the Docker image
#          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#
#          # Push the Docker image to Amazon ECR
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
